{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Bold;
\f3\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red253\green143\blue63;\red31\green31\blue36;\red252\green106\blue93;
\red252\green95\blue163;\red255\green255\blue255;\red122\green200\blue182;\red145\green212\blue98;\red153\green232\blue213;
\red150\green134\blue245;\red174\green243\blue125;\red108\green121\blue134;}
{\*\expandedcolortbl;;\csgenericrgb\c99131\c56076\c24611;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c98912\c41558\c36568;
\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c47716\c78607\c71403;\csgenericrgb\c56799\c83212\c38450;\csgenericrgb\c59926\c90967\c83488;
\csgenericrgb\c58752\c52717\c95948;\csgenericrgb\c68215\c95290\c48909;\csgenericrgb\c42394\c47462\c52518;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 #include \cf4 <iostream>
\f1 \cf0 \

\f0 \cf2 #include \cf4 <cmath>
\f1 \cf0 \

\f0 \cf2 #include \cf4 <vector>
\f1 \cf0 \

\f0 \cf2 #include \cf4 <random>
\f1 \cf0 \

\f2\b \cf5 using
\f0\b0 \cf6  
\f2\b \cf5 namespace
\f0\b0 \cf6  \cf7 std\cf6 ;
\f1 \cf0 \
\

\f2\b \cf5 class
\f0\b0 \cf6  Uniform \{
\f1 \cf0 \

\f0 \cf6     \cf7 mt19937_64\cf6  mt;
\f1 \cf0 \

\f0 \cf6     \cf7 uniform_real_distribution\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 > u;
\f1 \cf0 \

\f2\b \cf5 public
\f0\b0 \cf6 :
\f1 \cf0 \

\f0 \cf6     Uniform(
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 unsigned
\f0\b0 \cf6  
\f2\b \cf5 int
\f0\b0 \cf6  s) : \cf8 mt\cf6 (\cf9 time\cf6 (\cf10 0\cf6 )) \{\}
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  
\f2\b \cf5 operator
\f0\b0 \cf6 ()() \{
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 return
\f0\b0 \cf6  \cf8 u\cf6 (\cf9 mt\cf6 );
\f1 \cf0 \

\f0 \cf6     \}
\f1 \cf0 \

\f0 \cf6 \};
\f1 \cf0 \
\

\f2\b \cf5 double
\f0\b0 \cf6  sum(
\f2\b \cf5 const
\f0\b0 \cf6  \cf7 vector\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 >& v) \{
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  S = \cf10 0.0\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 for
\f0\b0 \cf6  (
\f2\b \cf5 int
\f0\b0 \cf6  i = \cf10 0\cf6 ; i<v.\cf9 size\cf6 (); i++)
\f1 \cf0 \

\f0 \cf6         S += v[\cf9 i\cf6 ];
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 return
\f0\b0 \cf6  S;
\f1 \cf0 \

\f0 \cf6 \}
\f1 \cf0 \

\f2\b \cf5 double
\f0\b0 \cf6  mean(
\f2\b \cf5 const
\f0\b0 \cf6  \cf7 vector\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 >& v) \{
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 return
\f0\b0 \cf6  \cf11 sum\cf6 (v) / 
\f2\b \cf5 double
\f0\b0 \cf6 (v.\cf9 size\cf6 ());
\f1 \cf0 \

\f0 \cf6 \}
\f1 \cf0 \

\f2\b \cf5 double
\f0\b0 \cf6  var(
\f2\b \cf5 const
\f0\b0 \cf6  \cf7 vector\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 >& v) \{
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  m = \cf11 mean\cf6 (v);
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  S = \cf10 0.0\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 for
\f0\b0 \cf6  (
\f2\b \cf5 int
\f0\b0 \cf6  i = \cf10 0\cf6 ; i<v.\cf9 size\cf6 (); i++) \{
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  y = (v[\cf9 i\cf6 ] - m);
\f1 \cf0 \

\f0 \cf6         S += y*y;
\f1 \cf0 \

\f0 \cf6     \}
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 return
\f0\b0 \cf6  S / (
\f2\b \cf5 double
\f0\b0 \cf6 (v.\cf9 size\cf6 ()) - \cf10 1.0\cf6 );
\f1 \cf0 \

\f0 \cf6 \}
\f1 \cf0 \
\

\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  pi = \cf10 3.14159265358979\cf6 ;
\f1 \cf0 \

\f2\b \cf5 double
\f0\b0 \cf6  f(
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  x) \{ 
\f3\i \cf12 //f(x)
\f1\i0 \cf0 \

\f0 \cf6     
\f2\b \cf5 return
\f0\b0 \cf6  \cf9 cos\cf6 (x)/\cf9 sqrt\cf6 (x);
\f1 \cf0 \

\f0 \cf6 \}
\f1 \cf0 \

\f2\b \cf5 double
\f0\b0 \cf6  g(
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  x) \{  
\f3\i \cf12 // g(x)
\f1\i0 \cf0 \

\f0 \cf6     
\f2\b \cf5 return
\f0\b0 \cf6  \cf10 1.0\cf6 /\cf9 sqrt\cf6 (\cf10 2.0\cf6 *\cf8 pi\cf6 *x);
\f1 \cf0 \

\f0 \cf6 \}
\f1 \cf0 \

\f3\i \cf12 // We need K = 1/sqrt(2*pi)
\f1\i0 \cf0 \

\f3\i \cf12 // The cdf is G(x) = sqrt(2/pi)*sqrt(x)
\f1\i0 \cf0 \

\f3\i \cf12 // To invert the cdf, put u = G(x)
\f1\i0 \cf0 \

\f3\i \cf12 // Rearranging gives x = pi*u^2/2
\f1\i0 \cf0 \
\

\f2\b \cf5 template
\f0\b0 \cf6  <
\f2\b \cf5 typename
\f0\b0 \cf6  F> 
\f3\i \cf12 // mean value algorithm
\f1\i0 \cf0 \

\f2\b \cf5 double
\f0\b0 \cf6  mean_value(
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  a, 
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  b, 
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 int
\f0\b0 \cf6  N, F f, \cf8 Uniform\cf6 & u) \{
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  S = \cf10 0.0\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 for
\f0\b0 \cf6  (
\f2\b \cf5 int
\f0\b0 \cf6  i = \cf10 0\cf6 ; i<N; i++) \{
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  x = a + (b-a)*u();
\f1 \cf0 \

\f0 \cf6         S += f(x);
\f1 \cf0 \

\f0 \cf6     \}
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 return
\f0\b0 \cf6  (b - a)*S / 
\f2\b \cf5 double
\f0\b0 \cf6 (N); 
\f3\i \cf12 // width * sample average height
\f1\i0 \cf0 \

\f0 \cf6 \}
\f1 \cf0 \
\

\f2\b \cf5 int
\f0\b0 \cf6  main() \{
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 int
\f0\b0 \cf6  s = \cf10 41\cf6 ;
\f1 \cf0 \

\f0 \cf6     \cf8 Uniform\cf6  unif(s);
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  a = \cf10 0.0\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  b = \cf8 pi\cf6 /\cf10 2.0\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 int
\f0\b0 \cf6  m = \cf10 1000\cf6 ; 
\f3\i \cf12 // amount of values that we are going to store in the vectors
\f1\i0 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 int
\f0\b0 \cf6  N = \cf10 2000\cf6 ; 
\f3\i \cf12 // amount times we are going to check if it satisfies our conditions in the above function for mean_value method
\f1\i0 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     \cf7 vector\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 > I(m); 
\f3\i \cf12 // in this example we actually reuse the same vector for both
\f1\i0 \cf0 \

\f0 \cf6                         
\f3\i \cf12 // we use it to calc mean value method then overwrite this data for the importance sampling data
\f1\i0 \cf0 \

\f0 \cf6                         
\f3\i \cf12 // this is more efficient
\f1\i0 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 for
\f0\b0 \cf6  (
\f2\b \cf5 int
\f0\b0 \cf6  k = \cf10 0\cf6 ; k<m; k++) \{
\f1 \cf0 \

\f0 \cf6         I[\cf9 k\cf6 ]=\cf11 mean_value\cf6 (a, b, N, \cf11 f\cf6 , unif);
\f1 \cf0 \

\f0 \cf6     \} 
\f3\i \cf12 // fill this vector with value from the mean value
\f1\i0 \cf0 \

\f0 \cf6     \cf7 cout\cf6  << \cf4 "Mean value method:\\n"\cf6 ;
\f1 \cf0 \

\f0 \cf6     \cf7 cout\cf6  << \cf11 mean\cf6 (I) << \cf4 "\\t"\cf6  << \cf11 var\cf6 (I) << \cf9 endl\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 for
\f0\b0 \cf6  (
\f2\b \cf5 int
\f0\b0 \cf6  k = \cf10 0\cf6 ; k<m; k++) \{
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 double
\f0\b0 \cf6  S = \cf10 0.0\cf6 ;
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 for
\f0\b0 \cf6  (
\f2\b \cf5 int
\f0\b0 \cf6  i = \cf10 0\cf6 ; i<N; i++) \{
\f1 \cf0 \

\f0 \cf6             
\f3\i \cf12 // generating x with cdf G using inverse cdf method:
\f1\i0 \cf0 \

\f0 \cf6             
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  u = unif();
\f1 \cf0 \

\f0 \cf6             
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  x = \cf8 pi\cf6 *u*u/\cf10 2.0\cf6 ;
\f1 \cf0 \

\f0 \cf6             S += \cf11 f\cf6 (x)/\cf11 g\cf6 (x);
\f1 \cf0 \

\f0 \cf6         \}
\f1 \cf0 \

\f0 \cf6         I[\cf9 k\cf6 ]=S / 
\f2\b \cf5 double
\f0\b0 \cf6 (N); 
\f3\i \cf12 // this is what the approximation of the integral is but we are doing this m times
\f1\i0 \cf0 \

\f0 \cf6         ;                   
\f3\i \cf12 // below you calculate the mean of the stored vector values
\f1\i0 \cf0 \

\f0 \cf6     \}
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     \cf7 cout\cf6  << \cf4 "Importance sampling:\\n"\cf6 ;
\f1 \cf0 \

\f0 \cf6     \cf7 cout\cf6  << \cf11 mean\cf6 (I) << \cf4 "\\t"\cf6  << \cf11 var\cf6 (I) << \cf9 endl\cf6 ; 
\f3\i \cf12 // mean of vector above with approximations of the integral
\f1\i0 \cf0 \

\f0 \cf6 \}
\f1 \cf0 \
}