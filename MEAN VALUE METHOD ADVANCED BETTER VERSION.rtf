{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Bold;
\f3\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red253\green143\blue63;\red31\green31\blue36;\red252\green106\blue93;
\red252\green95\blue163;\red255\green255\blue255;\red122\green200\blue182;\red108\green121\blue134;\red145\green212\blue98;
\red153\green232\blue213;\red150\green134\blue245;\red174\green243\blue125;}
{\*\expandedcolortbl;;\csgenericrgb\c99131\c56076\c24611;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c98912\c41558\c36568;
\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c47716\c78607\c71403;\csgenericrgb\c42394\c47462\c52518;\csgenericrgb\c56799\c83212\c38450;
\csgenericrgb\c59926\c90967\c83488;\csgenericrgb\c58752\c52717\c95948;\csgenericrgb\c68215\c95290\c48909;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 #include \cf4 <iostream>
\f1 \cf0 \

\f0 \cf2 #include \cf4 <vector>
\f1 \cf0 \

\f0 \cf2 #include \cf4 <random>
\f1 \cf0 \

\f0 \cf2 #include \cf4 <cmath>
\f1 \cf0 \

\f0 \cf2 #include\cf4 <iomanip>
\f1 \cf0 \

\f2\b \cf5 using
\f0\b0 \cf6  
\f2\b \cf5 namespace
\f0\b0 \cf6  \cf7 std\cf6 ;
\f1 \cf0 \
\

\f2\b \cf5 double
\f0\b0 \cf6  sum(
\f2\b \cf5 const
\f0\b0 \cf6  \cf7 vector\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 >& v);
\f1 \cf0 \

\f2\b \cf5 double
\f0\b0 \cf6  mean(
\f2\b \cf5 const
\f0\b0 \cf6  \cf7 vector\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 >& v);
\f1 \cf0 \

\f2\b \cf5 double
\f0\b0 \cf6  var(
\f2\b \cf5 const
\f0\b0 \cf6  \cf7 vector\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 >& v);
\f1 \cf0 \
\

\f2\b \cf5 class
\f0\b0 \cf6  Uniform \{
\f1 \cf0 \

\f0 \cf6     \cf7 mt19937_64\cf6  mt; 
\f3\i \cf8 // prototyping seed for random number generator via mersenne twister
\f1\i0 \cf0 \

\f0 \cf6     \cf7 uniform_real_distribution\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 > u; 
\f3\i \cf8 // will give numbers from uniform real distribution prototype
\f1\i0 \cf0 \

\f2\b \cf5 public
\f0\b0 \cf6 :
\f1 \cf0 \

\f0 \cf6     Uniform(
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 unsigned
\f0\b0 \cf6  
\f2\b \cf5 int
\f0\b0 \cf6  s) : \cf9 mt\cf6 (\cf10 time\cf6 (\cf11 0\cf6 )) \{\} 
\f3\i \cf8 // constructor which allows us to set the vaklue of s later
\f1\i0 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  
\f2\b \cf5 operator
\f0\b0 \cf6 ()() \{ 
\f3\i \cf8 //function which returns a function (random number from uniform real dist)
\f1\i0 \cf0 \

\f0 \cf6         
\f2\b \cf5 return
\f0\b0 \cf6  \cf9 u\cf6 (\cf10 mt\cf6 );
\f1 \cf0 \

\f0 \cf6     \}
\f1 \cf0 \

\f0 \cf6 \};
\f1 \cf0 \
\

\f0 \cf8 /////////// IMPROVED MEAN VALUE FUNCTION /////////////
\f1 \cf0 \

\f2\b \cf5 template
\f0\b0 \cf6  <
\f2\b \cf5 typename
\f0\b0 \cf6  F>
\f1 \cf0 \

\f2\b \cf5 double
\f0\b0 \cf6  mean_value_modified(
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  a, 
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  b, 
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 int
\f0\b0 \cf6  N, F f, \cf9 Uniform\cf6 & u) \{
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  S = \cf11 0.0\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 for
\f0\b0 \cf6  (
\f2\b \cf5 int
\f0\b0 \cf6  i = \cf11 0\cf6 ; i<N; i++) \{
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  x = a + (b-a)*(i + u())/
\f2\b \cf5 double
\f0\b0 \cf6 (N);
\f1 \cf0 \

\f0 \cf6         S += f(x);
\f1 \cf0 \

\f0 \cf6     \}
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 return
\f0\b0 \cf6  (b - a)*S / 
\f2\b \cf5 double
\f0\b0 \cf6 (N);
\f1 \cf0 \

\f0 \cf6 \}
\f1 \cf0 \
\

\f2\b \cf5 double
\f0\b0 \cf6  f(
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  x) \{
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 return
\f0\b0 \cf6  x*x*(\cf11 1.0\cf6  - x)*(\cf11 1.0\cf6  - x);
\f1 \cf0 \

\f0 \cf6 \} 
\f3\i \cf8 // pdf given in the question that we are using to find f(x) and feed in random values for x
\f1\i0 \cf0 \
\

\f2\b \cf5 int
\f0\b0 \cf6  main() \{
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 int
\f0\b0 \cf6  seed = \cf11 21\cf6 ;
\f1 \cf0 \

\f0 \cf6     \cf9 Uniform\cf6  unif(seed);
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  a = \cf11 0.0\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  b = \cf11 1.0\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 int
\f0\b0 \cf6  m = \cf11 1000\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     \cf7 vector\cf6 <
\f2\b \cf5 int
\f0\b0 \cf6 > Ns = \{ \cf11 100\cf6 , \cf11 1000\cf6 , \cf11 10000\cf6  \};
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  actual_value = \cf11 1.0\cf6 /\cf11 30.0\cf6 ;
\f1 \cf0 \

\f0 \cf6     \cf7 cout\cf6  << \cf4 "Actual integral value: "\cf6  << actual_value << \cf10 endl\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 for
\f0\b0 \cf6  (
\f2\b \cf5 int
\f0\b0 \cf6  k = \cf11 0\cf6 ; k<Ns.\cf10 size\cf6 (); k++) \{
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 int
\f0\b0 \cf6  N = Ns[\cf10 k\cf6 ];
\f1 \cf0 \

\f0 \cf6         \cf7 cout\cf6  << \cf4 "Number of samples: "\cf6  << N << \cf10 endl\cf6 ;
\f1 \cf0 \

\f0 \cf6         \cf7 vector\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 > IMM(m);
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 for
\f0\b0 \cf6  (
\f2\b \cf5 int
\f0\b0 \cf6  j = \cf11 0\cf6 ; j < m; j++) \{
\f1 \cf0 \

\f0 \cf6             IMM[\cf10 j\cf6 ] = \cf12 mean_value_modified\cf6 (a, b, N, \cf12 f\cf6 , unif);
\f1 \cf0 \

\f0 \cf6         \}
\f1 \cf0 \

\f0 \cf6         \cf7 cout\cf6  << \cf10 setprecision\cf6 (\cf11 12\cf6 ) << \cf4 "Approximate for improved method: "\cf6  << \cf12 mean\cf6 (IMM) << \cf10 endl\cf6 ;
\f1 \cf0 \

\f0 \cf6         \cf7 cout\cf6  << \cf4 "Mean value modified variance:\\t"\cf6  << \cf12 var\cf6 (IMM) << \cf10 endl\cf6  << \cf10 endl\cf6 ;
\f1 \cf0 \

\f0 \cf6         
\f1 \cf0 \

\f0 \cf6       
\f1 \cf0 \

\f0 \cf6         
\f1 \cf0 \

\f0 \cf6     \}
\f1 \cf0 \

\f0 \cf6 \}
\f1 \cf0 \
\

\f2\b \cf5 double
\f0\b0 \cf6  sum(
\f2\b \cf5 const
\f0\b0 \cf6  \cf7 vector\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 >& v) \{
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  S = \cf11 0.0\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 for
\f0\b0 \cf6  (
\f2\b \cf5 int
\f0\b0 \cf6  i = \cf11 0\cf6 ; i<v.\cf10 size\cf6 (); i++)
\f1 \cf0 \

\f0 \cf6         S += v[\cf10 i\cf6 ];
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 return
\f0\b0 \cf6  S;
\f1 \cf0 \

\f0 \cf6 \}
\f1 \cf0 \

\f2\b \cf5 double
\f0\b0 \cf6  mean(
\f2\b \cf5 const
\f0\b0 \cf6  \cf7 vector\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 >& v) \{
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 return
\f0\b0 \cf6  \cf12 sum\cf6 (v) / 
\f2\b \cf5 double
\f0\b0 \cf6 (v.\cf10 size\cf6 ());
\f1 \cf0 \

\f0 \cf6 \}
\f1 \cf0 \

\f2\b \cf5 double
\f0\b0 \cf6  var(
\f2\b \cf5 const
\f0\b0 \cf6  \cf7 vector\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 >& v) \{
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  m = \cf12 mean\cf6 (v);
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  S = \cf11 0.0\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 for
\f0\b0 \cf6  (
\f2\b \cf5 int
\f0\b0 \cf6  i = \cf11 0\cf6 ; i<v.\cf10 size\cf6 (); i++) \{
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  y = (v[\cf10 i\cf6 ] - m);
\f1 \cf0 \

\f0 \cf6         S += y*y;
\f1 \cf0 \

\f0 \cf6     \}
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 return
\f0\b0 \cf6  S / (
\f2\b \cf5 double
\f0\b0 \cf6 (v.\cf10 size\cf6 ()) - \cf11 1.0\cf6 );
\f1 \cf0 \

\f0 \cf6 \}
\f1 \cf0 \
}