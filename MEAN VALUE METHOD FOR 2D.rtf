{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Bold;
\f3\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red253\green143\blue63;\red31\green31\blue36;\red252\green106\blue93;
\red252\green95\blue163;\red255\green255\blue255;\red122\green200\blue182;\red145\green212\blue98;\red153\green232\blue213;
\red150\green134\blue245;\red108\green121\blue134;\red174\green243\blue125;}
{\*\expandedcolortbl;;\csgenericrgb\c99131\c56076\c24611;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c98912\c41558\c36568;
\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c47716\c78607\c71403;\csgenericrgb\c56799\c83212\c38450;\csgenericrgb\c59926\c90967\c83488;
\csgenericrgb\c58752\c52717\c95948;\csgenericrgb\c42394\c47462\c52518;\csgenericrgb\c68215\c95290\c48909;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 #include \cf4 <iostream>
\f1 \cf0 \

\f0 \cf2 #include \cf4 <cmath>
\f1 \cf0 \

\f0 \cf2 #include \cf4 <vector>
\f1 \cf0 \

\f0 \cf2 #include \cf4 <random>
\f1 \cf0 \

\f2\b \cf5 using
\f0\b0 \cf6  
\f2\b \cf5 namespace
\f0\b0 \cf6  \cf7 std\cf6 ;
\f1 \cf0 \
\

\f2\b \cf5 class
\f0\b0 \cf6  Uniform \{
\f1 \cf0 \

\f0 \cf6     \cf7 mt19937_64\cf6  mt;
\f1 \cf0 \

\f0 \cf6     \cf7 uniform_real_distribution\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 > u;
\f1 \cf0 \

\f2\b \cf5 public
\f0\b0 \cf6 :
\f1 \cf0 \

\f0 \cf6     Uniform(
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 unsigned
\f0\b0 \cf6  
\f2\b \cf5 int
\f0\b0 \cf6  s) : \cf8 mt\cf6 (\cf9 time\cf6 (\cf10 0\cf6 )) \{\}
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  
\f2\b \cf5 operator
\f0\b0 \cf6 ()() \{
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 return
\f0\b0 \cf6  \cf8 u\cf6 (\cf9 mt\cf6 );
\f1 \cf0 \

\f0 \cf6     \}
\f1 \cf0 \

\f0 \cf6 \};
\f1 \cf0 \
\

\f2\b \cf5 template
\f0\b0 \cf6  <
\f2\b \cf5 typename
\f0\b0 \cf6  F>
\f1 \cf0 \

\f2\b \cf5 double
\f0\b0 \cf6  mean_value_2d(
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  a, 
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  b, 
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  c, 
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  d, 
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 int
\f0\b0 \cf6  N, F f, \cf8 Uniform\cf6 & u) \{
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  S = \cf10 0.0\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 for
\f0\b0 \cf6  (
\f2\b \cf5 int
\f0\b0 \cf6  i = \cf10 0\cf6 ; i<N; i++) \{
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  x = c + (d-c)*u(); 
\f3\i \cf11 //random x coord
\f1\i0 \cf0 \

\f0 \cf6         
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  y = a + (b-a)*u(); 
\f3\i \cf11 // random y coord
\f1\i0 \cf0 \

\f0 \cf6         S += f(x, y); 
\f3\i \cf11 // summing all random points in a rectangle
\f1\i0 \cf0 \

\f0 \cf6     \}
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 return
\f0\b0 \cf6  (b-a)*(d-c)*S/
\f2\b \cf5 double
\f0\b0 \cf6 (N); 
\f3\i \cf11 // approximation of integral computed by the 2d mean value method
\f1\i0 \cf0 \

\f0 \cf6 \}
\f1 \cf0 \
\
\

\f2\b \cf5 double
\f0\b0 \cf6  f(
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  x, 
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  y) \{ \cf11 ///ARBITARY FUNCTION THAT YOU CAN CHANGE >> WHAT WE ARE INTEGRATING
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 return
\f0\b0 \cf6  \cf10 12.0\cf6 *x*x*y*y*y;
\f1 \cf0 \

\f0 \cf6 \}
\f1 \cf0 \
\

\f2\b \cf5 int
\f0\b0 \cf6  main() \{
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 int
\f0\b0 \cf6  s = \cf10 41\cf6 ;
\f1 \cf0 \

\f0 \cf6     \cf8 Uniform\cf6  unif(s);
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 int
\f0\b0 \cf6  N = \cf10 100000\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  a = -\cf10 1.0\cf6 ; 
\f3\i \cf11 // lower y value
\f1\i0 \cf0 \

\f0 \cf6     
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  b = \cf10 2.0\cf6 ; 
\f3\i \cf11 // upper y value
\f1\i0 \cf0 \

\f0 \cf6     
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  c = \cf10 1.0\cf6 ; 
\f3\i \cf11 // left x value
\f1\i0 \cf0 \

\f0 \cf6     
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  d = \cf10 3.0\cf6 ; 
\f3\i \cf11 // right value
\f1\i0 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     \cf7 cout\cf6  << \cf12 mean_value_2d\cf6 (a, b, c, d, N, \cf12 f\cf6 , unif) << \cf9 endl\cf6 ; 
\f3\i \cf11 //print appproximate integral value
\f1\i0 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     \cf7 cout\cf6  << (\cf9 pow\cf6 (b, \cf10 4\cf6 )-\cf9 pow\cf6 (a, \cf10 4\cf6 ))*(\cf9 pow\cf6 (d, \cf10 3\cf6 )-\cf9 pow\cf6 (c, \cf10 3\cf6 )) << \cf9 endl\cf6 ; 
\f3\i \cf11 // actual integral value 
\f1\i0 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6 \}
\f1 \cf0 \
\
}