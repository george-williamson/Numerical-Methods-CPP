{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Bold;
}
{\colortbl;\red255\green255\blue255;\red253\green143\blue63;\red31\green31\blue36;\red252\green106\blue93;
\red252\green95\blue163;\red255\green255\blue255;\red122\green200\blue182;\red150\green134\blue245;\red153\green232\blue213;
\red174\green243\blue125;\red145\green212\blue98;}
{\*\expandedcolortbl;;\csgenericrgb\c99131\c56076\c24611;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c98912\c41558\c36568;
\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c47716\c78607\c71403;\csgenericrgb\c58752\c52717\c95948;\csgenericrgb\c59926\c90967\c83488;
\csgenericrgb\c68215\c95290\c48909;\csgenericrgb\c56799\c83212\c38450;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 #include\cf4 <iostream>
\f1 \cf0 \

\f0 \cf2 #include\cf4 <random>
\f1 \cf0 \

\f0 \cf2 #include\cf4 <ctime>
\f1 \cf0 \

\f0 \cf2 #include\cf4 <cmath>
\f1 \cf0 \

\f2\b \cf5 using
\f0\b0 \cf6  
\f2\b \cf5 namespace
\f0\b0 \cf6  \cf7 std\cf6 ;
\f1 \cf0 \
\

\f2\b \cf5 double
\f0\b0 \cf6  sum(
\f2\b \cf5 const
\f0\b0 \cf6  \cf7 vector\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 >& v) \{
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  S = \cf8 0.0\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 for
\f0\b0 \cf6  (
\f2\b \cf5 int
\f0\b0 \cf6  i = \cf8 0\cf6 ; i<v.\cf9 size\cf6 (); i++)
\f1 \cf0 \

\f0 \cf6         S += v[\cf9 i\cf6 ];
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 return
\f0\b0 \cf6  S;
\f1 \cf0 \

\f0 \cf6 \}
\f1 \cf0 \

\f2\b \cf5 double
\f0\b0 \cf6  mean(
\f2\b \cf5 const
\f0\b0 \cf6  \cf7 vector\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 >& v) \{
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 return
\f0\b0 \cf6  \cf10 sum\cf6 (v) / 
\f2\b \cf5 double
\f0\b0 \cf6 (v.\cf9 size\cf6 ());
\f1 \cf0 \

\f0 \cf6 \}
\f1 \cf0 \

\f2\b \cf5 double
\f0\b0 \cf6  var(
\f2\b \cf5 const
\f0\b0 \cf6  \cf7 vector\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 >& v) \{
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  m = \cf10 mean\cf6 (v);
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  S = \cf8 0.0\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 for
\f0\b0 \cf6  (
\f2\b \cf5 int
\f0\b0 \cf6  i = \cf8 0\cf6 ; i<v.\cf9 size\cf6 (); i++) \{
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  y = (v[\cf9 i\cf6 ] - m);
\f1 \cf0 \

\f0 \cf6         S += y*y;
\f1 \cf0 \

\f0 \cf6     \}
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 return
\f0\b0 \cf6  S / (
\f2\b \cf5 double
\f0\b0 \cf6 (v.\cf9 size\cf6 ()) - \cf8 1.0\cf6 );
\f1 \cf0 \

\f0 \cf6 \}
\f1 \cf0 \
\

\f2\b \cf5 double
\f0\b0 \cf6  correlation_coefficient(
\f2\b \cf5 const
\f0\b0 \cf6  \cf7 vector\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 >&v, 
\f2\b \cf5 const
\f0\b0 \cf6  \cf7 vector\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 >&w)\{
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 if
\f0\b0 \cf6 (v.\cf9 size\cf6 () == w.\cf9 size\cf6 () && v.\cf9 size\cf6 () && w.\cf9 size\cf6 () >= \cf8 2\cf6 )\{
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  xbar = \cf10 mean\cf6 (v);
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  ybar = \cf10 mean\cf6 (w);
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  S =\cf8 0.0\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  xvar = \cf10 var\cf6 (v);
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  yvar = \cf10 var\cf6 (w);
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  sqrt_var_prod = \cf9 pow\cf6 (xvar*yvar, \cf8 0.5\cf6 );
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 for
\f0\b0 \cf6 (
\f2\b \cf5 int
\f0\b0 \cf6  i=\cf8 0\cf6 ; i<v.\cf9 size\cf6 (); i++)\{
\f1 \cf0 \

\f0 \cf6         
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 double
\f0\b0 \cf6  x_dif = v[\cf9 i\cf6 ] - xbar;
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 double
\f0\b0 \cf6  y_dif = w[\cf9 i\cf6 ] - ybar;
\f1 \cf0 \

\f0 \cf6         
\f1 \cf0 \

\f0 \cf6         S += x_dif*y_dif;
\f1 \cf0 \

\f0 \cf6     \}
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  r = S/((v.\cf9 size\cf6 () - \cf8 1\cf6 )*sqrt_var_prod);
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 return
\f0\b0 \cf6  r;
\f1 \cf0 \

\f0 \cf6     \}
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 else
\f0\b0 \cf6 \{
\f1 \cf0 \

\f0 \cf6         \cf7 cout\cf6  << \cf4 "Invalid sample sizes"\cf6  << \cf9 endl\cf6 ;
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 return
\f0\b0 \cf6  \cf8 0\cf6 ;
\f1 \cf0 \

\f0 \cf6     \}
\f1 \cf0 \

\f0 \cf6 \}
\f1 \cf0 \

\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  pi = \cf8 3.14159265359\cf6 ;
\f1 \cf0 \
\
\

\f2\b \cf5 int
\f0\b0 \cf6  main()\{
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     \cf7 mt19937_64\cf6  mtrand(\cf9 time\cf6 (\cf8 0\cf6 ));
\f1 \cf0 \

\f0 \cf6     \cf7 uniform_real_distribution\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 > unif(\cf8 0.0\cf6 , \cf8 1.0\cf6 );
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 int
\f0\b0 \cf6  N = \cf8 5000\cf6 ;
\f1 \cf0 \

\f0 \cf6     \cf7 vector\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 > xs(\cf8 2\cf6 *N);
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 for
\f0\b0 \cf6  (
\f2\b \cf5 int
\f0\b0 \cf6  i = \cf8 0\cf6 ; i<N; i++) \{
\f1 \cf0 \

\f0 \cf6         
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  u = unif(\cf9 mtrand\cf6 );
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  v = unif(\cf9 mtrand\cf6 );
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  r = \cf9 sqrt\cf6 (-\cf8 2.0\cf6 *\cf9 log\cf6 (u));
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  theta = \cf8 2.0\cf6 *\cf11 pi\cf6 *v;
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  x = r*\cf9 cos\cf6 (theta);
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  y = r*\cf9 sin\cf6 (theta);
\f1 \cf0 \

\f0 \cf6         xs[\cf9 i\cf6 ] = x;
\f1 \cf0 \

\f0 \cf6         xs[\cf9 N\cf6 +\cf9 i\cf6 ] = y;
\f1 \cf0 \

\f0 \cf6     \}
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     \cf7 vector\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 > ys(\cf8 2\cf6 *N);
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 for
\f0\b0 \cf6  (
\f2\b \cf5 int
\f0\b0 \cf6  i = \cf8 0\cf6 ; i<N; i++) \{
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6             
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  u = unif(\cf9 mtrand\cf6 );
\f1 \cf0 \

\f0 \cf6             
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  v = unif(\cf9 mtrand\cf6 );
\f1 \cf0 \

\f0 \cf6             
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  r = \cf9 sqrt\cf6 (-\cf8 2.0\cf6 *\cf9 log\cf6 (u));
\f1 \cf0 \

\f0 \cf6             
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  theta = \cf8 2.0\cf6 *\cf11 pi\cf6 *v;
\f1 \cf0 \

\f0 \cf6             
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  x = r*\cf9 cos\cf6 (theta);
\f1 \cf0 \

\f0 \cf6             
\f2\b \cf5 const
\f0\b0 \cf6  
\f2\b \cf5 double
\f0\b0 \cf6  y = r*\cf9 sin\cf6 (theta);
\f1 \cf0 \

\f0 \cf6             ys[\cf9 i\cf6 ] = x;
\f1 \cf0 \

\f0 \cf6             ys[\cf9 N\cf6 +\cf9 i\cf6 ] = y;
\f1 \cf0 \

\f0 \cf6         \}
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     \cf7 vector\cf6 <
\f2\b \cf5 double
\f0\b0 \cf6 > ws(\cf8 2\cf6 *N);
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  p=\cf8 0.8\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 double
\f0\b0 \cf6  p_sqr = \cf9 pow\cf6 ((\cf8 1\cf6 -p*p),\cf8 0.5\cf6 );
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     
\f2\b \cf5 for
\f0\b0 \cf6 (
\f2\b \cf5 int
\f0\b0 \cf6  i=\cf8 0\cf6 ; i<\cf8 2\cf6 *N; i++)\{
\f1 \cf0 \

\f0 \cf6         
\f1 \cf0 \

\f0 \cf6         ws[\cf9 i\cf6 ] = p*xs[\cf9 i\cf6 ] + p_sqr*ys[\cf9 i\cf6 ];
\f1 \cf0 \

\f0 \cf6     \}
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 double
\f0\b0 \cf6  corr1 = \cf10 correlation_coefficient\cf6 (xs, ys);
\f1 \cf0 \

\f0 \cf6         \cf7 cout\cf6  << corr1 << \cf9 endl\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6         
\f2\b \cf5 double
\f0\b0 \cf6  corr2 = \cf10 correlation_coefficient\cf6 (xs, ws);
\f1 \cf0 \

\f0 \cf6         \cf7 cout\cf6  << corr2 << \cf9 endl\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6     \cf7 cout\cf6  << ws.\cf9 size\cf6 () << \cf9 endl\cf6 ;
\f1 \cf0 \

\f0 \cf6     
\f1 \cf0 \

\f0 \cf6 \}
\f1 \cf0 \
}